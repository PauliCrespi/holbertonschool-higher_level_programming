====================
2-matrix_divided.py
====================

Divide a matrix function. Recieves a list of intsor floats and an intor float value which cant be 0.

======================
MODULE:
======================

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

======================

TESTS:

=========================================================================
SUCCESS CASES: Returns a new list with division result with two decimals.
=========================================================================

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1)
        [[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

	>>> matrix_divided([[1.87, -2], [-4, 5]], 3)
        [[0.62, -0.67], [-1.33, 1.67]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0.5)
	[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

=========================================================================
ERROR CASES:
=========================================================================
MATRIX TYPE IS NOT INT:
=========================

	>>> matrix_divided([[1, 2, 3], [9, 6, "hello"]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists)of integers/floats

======================================
DIV IS NOT INT NEITHER BIGGER THAN 0:
======================================

	        
	>>> matrix_divided([[1, 2, 3], [9, 6, 3]], "h")
       	Traceback (most recent call last):
        TypeError: div must be a number

        >>> matrix_divided([[1, 2, 3], [9, 6, 3]], (1, 3))
        Traceback (most recent call last):
        TypeError: div must be a number

        >>> matrix_divided([[1, 2, 3], [9, 6, 3]], 0)
        Traceback (most recent call last):
        ZeroDivisionError: division by zero

===================================================
ALL LISTS IN THE MATRIX MUST BE THE SAME LENGTH:
===================================================

        >>> matrix_divided([[1, 2, 3], [6, 3]], 8)
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size

=================================================
PASSING NONE:
=================================================

	>>> matrix_divided(None, 3)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists)of integers/floats

	>>> matrix_divided([[1, 2, 3], [6, 3, 4]], None)
	Traceback (most recent call last):
	TypeError: div must be a number

===============================================
PASSING EMPTY:
===============================================

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided([[1, 2, 4], [3, 4, 8]],)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

============================================
NOT A MATRIX CASE:
============================================

        >>> matrix_divided([(1, 2)], 3)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists)of integers/floats

        >>> matrix_divided([[2, 4], (1, 2)], 3)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists)of integers/floats
